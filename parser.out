Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHARACTER

Grammar

Rule 0     S' -> test
Rule 1     test -> BEAR function
Rule 2     function -> term
Rule 3     function -> IF function COMMA function SEPARATOR ELSE function
Rule 4     function -> FOR LSLASHES term IN function RSLASHES term
Rule 5     function -> WHILE LSLASHES term BINOP term RSLASHES term
Rule 6     add -> graph PLUS LDELIMITER file RDELIMITER
Rule 7     add -> graph PLUS ID
Rule 8     create -> CREATE LSLASHES ID RSLASHES
Rule 9     create -> CREATE LSLASHES ID FROM file RSLASHES
Rule 10    create -> CREATE
Rule 11    remove -> graph MINUS node
Rule 12    display -> DISPLAY graph
Rule 13    graph -> ID
Rule 14    file -> ID DOT ID
Rule 15    node -> NODE ID
Rule 16    term -> add
Rule 17    term -> remove
Rule 18    term -> display
Rule 19    term -> file
Rule 20    term -> graph
Rule 21    term -> node
Rule 22    term -> create

Terminals, with rules where they appear

BEAR                 : 1
BINOP                : 5
CHARACTER            : 
COMMA                : 3
CREATE               : 8 9 10
DISPLAY              : 12
DOT                  : 14
ELSE                 : 3
FOR                  : 4
FROM                 : 9
ID                   : 7 8 9 13 14 14 15
IF                   : 3
IN                   : 4
LDELIMITER           : 6
LSLASHES             : 4 5 8 9
MINUS                : 11
NODE                 : 15
PLUS                 : 6 7
RDELIMITER           : 6
RSLASHES             : 4 5 8 9
SEPARATOR            : 3
WHILE                : 5
error                : 

Nonterminals, with rules where they appear

add                  : 16
create               : 22
display              : 18
file                 : 6 9 19
function             : 1 3 3 3 4
graph                : 6 7 11 12 20
node                 : 11 21
remove               : 17
term                 : 2 4 4 5 5 5
test                 : 0

Parsing method: LALR

state 0

    (0) S' -> . test
    (1) test -> . BEAR function

    BEAR            shift and go to state 2

    test                           shift and go to state 1

state 1

    (0) S' -> test .



state 2

    (1) test -> BEAR . function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 3
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 3

    (1) test -> BEAR function .

    $end            reduce using rule 1 (test -> BEAR function .)


state 4

    (2) function -> term .

    $end            reduce using rule 2 (function -> term .)
    COMMA           reduce using rule 2 (function -> term .)
    SEPARATOR       reduce using rule 2 (function -> term .)
    RSLASHES        reduce using rule 2 (function -> term .)


state 5

    (3) function -> IF . function COMMA function SEPARATOR ELSE function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 19
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 6

    (4) function -> FOR . LSLASHES term IN function RSLASHES term

    LSLASHES        shift and go to state 20


state 7

    (5) function -> WHILE . LSLASHES term BINOP term RSLASHES term

    LSLASHES        shift and go to state 21


state 8

    (16) term -> add .

    $end            reduce using rule 16 (term -> add .)
    COMMA           reduce using rule 16 (term -> add .)
    IN              reduce using rule 16 (term -> add .)
    BINOP           reduce using rule 16 (term -> add .)
    SEPARATOR       reduce using rule 16 (term -> add .)
    RSLASHES        reduce using rule 16 (term -> add .)


state 9

    (17) term -> remove .

    $end            reduce using rule 17 (term -> remove .)
    COMMA           reduce using rule 17 (term -> remove .)
    IN              reduce using rule 17 (term -> remove .)
    BINOP           reduce using rule 17 (term -> remove .)
    SEPARATOR       reduce using rule 17 (term -> remove .)
    RSLASHES        reduce using rule 17 (term -> remove .)


state 10

    (18) term -> display .

    $end            reduce using rule 18 (term -> display .)
    COMMA           reduce using rule 18 (term -> display .)
    IN              reduce using rule 18 (term -> display .)
    BINOP           reduce using rule 18 (term -> display .)
    SEPARATOR       reduce using rule 18 (term -> display .)
    RSLASHES        reduce using rule 18 (term -> display .)


state 11

    (19) term -> file .

    $end            reduce using rule 19 (term -> file .)
    COMMA           reduce using rule 19 (term -> file .)
    IN              reduce using rule 19 (term -> file .)
    BINOP           reduce using rule 19 (term -> file .)
    SEPARATOR       reduce using rule 19 (term -> file .)
    RSLASHES        reduce using rule 19 (term -> file .)


state 12

    (20) term -> graph .
    (6) add -> graph . PLUS LDELIMITER file RDELIMITER
    (7) add -> graph . PLUS ID
    (11) remove -> graph . MINUS node

    $end            reduce using rule 20 (term -> graph .)
    COMMA           reduce using rule 20 (term -> graph .)
    IN              reduce using rule 20 (term -> graph .)
    BINOP           reduce using rule 20 (term -> graph .)
    SEPARATOR       reduce using rule 20 (term -> graph .)
    RSLASHES        reduce using rule 20 (term -> graph .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 13

    (21) term -> node .

    $end            reduce using rule 21 (term -> node .)
    COMMA           reduce using rule 21 (term -> node .)
    IN              reduce using rule 21 (term -> node .)
    BINOP           reduce using rule 21 (term -> node .)
    SEPARATOR       reduce using rule 21 (term -> node .)
    RSLASHES        reduce using rule 21 (term -> node .)


state 14

    (22) term -> create .

    $end            reduce using rule 22 (term -> create .)
    COMMA           reduce using rule 22 (term -> create .)
    IN              reduce using rule 22 (term -> create .)
    BINOP           reduce using rule 22 (term -> create .)
    SEPARATOR       reduce using rule 22 (term -> create .)
    RSLASHES        reduce using rule 22 (term -> create .)


state 15

    (14) file -> ID . DOT ID
    (13) graph -> ID .

    DOT             shift and go to state 24
    PLUS            reduce using rule 13 (graph -> ID .)
    MINUS           reduce using rule 13 (graph -> ID .)
    $end            reduce using rule 13 (graph -> ID .)
    COMMA           reduce using rule 13 (graph -> ID .)
    IN              reduce using rule 13 (graph -> ID .)
    BINOP           reduce using rule 13 (graph -> ID .)
    SEPARATOR       reduce using rule 13 (graph -> ID .)
    RSLASHES        reduce using rule 13 (graph -> ID .)


state 16

    (12) display -> DISPLAY . graph
    (13) graph -> . ID

    ID              shift and go to state 26

    graph                          shift and go to state 25

state 17

    (15) node -> NODE . ID

    ID              shift and go to state 27


state 18

    (8) create -> CREATE . LSLASHES ID RSLASHES
    (9) create -> CREATE . LSLASHES ID FROM file RSLASHES
    (10) create -> CREATE .

    LSLASHES        shift and go to state 28
    $end            reduce using rule 10 (create -> CREATE .)
    COMMA           reduce using rule 10 (create -> CREATE .)
    IN              reduce using rule 10 (create -> CREATE .)
    BINOP           reduce using rule 10 (create -> CREATE .)
    SEPARATOR       reduce using rule 10 (create -> CREATE .)
    RSLASHES        reduce using rule 10 (create -> CREATE .)


state 19

    (3) function -> IF function . COMMA function SEPARATOR ELSE function

    COMMA           shift and go to state 29


state 20

    (4) function -> FOR LSLASHES . term IN function RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 30
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 21

    (5) function -> WHILE LSLASHES . term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 31
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 22

    (6) add -> graph PLUS . LDELIMITER file RDELIMITER
    (7) add -> graph PLUS . ID

    LDELIMITER      shift and go to state 32
    ID              shift and go to state 33


state 23

    (11) remove -> graph MINUS . node
    (15) node -> . NODE ID

    NODE            shift and go to state 17

    node                           shift and go to state 34

state 24

    (14) file -> ID DOT . ID

    ID              shift and go to state 35


state 25

    (12) display -> DISPLAY graph .

    $end            reduce using rule 12 (display -> DISPLAY graph .)
    COMMA           reduce using rule 12 (display -> DISPLAY graph .)
    IN              reduce using rule 12 (display -> DISPLAY graph .)
    BINOP           reduce using rule 12 (display -> DISPLAY graph .)
    SEPARATOR       reduce using rule 12 (display -> DISPLAY graph .)
    RSLASHES        reduce using rule 12 (display -> DISPLAY graph .)


state 26

    (13) graph -> ID .

    $end            reduce using rule 13 (graph -> ID .)
    COMMA           reduce using rule 13 (graph -> ID .)
    IN              reduce using rule 13 (graph -> ID .)
    BINOP           reduce using rule 13 (graph -> ID .)
    SEPARATOR       reduce using rule 13 (graph -> ID .)
    RSLASHES        reduce using rule 13 (graph -> ID .)


state 27

    (15) node -> NODE ID .

    $end            reduce using rule 15 (node -> NODE ID .)
    COMMA           reduce using rule 15 (node -> NODE ID .)
    IN              reduce using rule 15 (node -> NODE ID .)
    BINOP           reduce using rule 15 (node -> NODE ID .)
    SEPARATOR       reduce using rule 15 (node -> NODE ID .)
    RSLASHES        reduce using rule 15 (node -> NODE ID .)


state 28

    (8) create -> CREATE LSLASHES . ID RSLASHES
    (9) create -> CREATE LSLASHES . ID FROM file RSLASHES

    ID              shift and go to state 36


state 29

    (3) function -> IF function COMMA . function SEPARATOR ELSE function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 37
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 30

    (4) function -> FOR LSLASHES term . IN function RSLASHES term

    IN              shift and go to state 38


state 31

    (5) function -> WHILE LSLASHES term . BINOP term RSLASHES term

    BINOP           shift and go to state 39


state 32

    (6) add -> graph PLUS LDELIMITER . file RDELIMITER
    (14) file -> . ID DOT ID

    ID              shift and go to state 41

    file                           shift and go to state 40

state 33

    (7) add -> graph PLUS ID .

    $end            reduce using rule 7 (add -> graph PLUS ID .)
    COMMA           reduce using rule 7 (add -> graph PLUS ID .)
    IN              reduce using rule 7 (add -> graph PLUS ID .)
    BINOP           reduce using rule 7 (add -> graph PLUS ID .)
    SEPARATOR       reduce using rule 7 (add -> graph PLUS ID .)
    RSLASHES        reduce using rule 7 (add -> graph PLUS ID .)


state 34

    (11) remove -> graph MINUS node .

    $end            reduce using rule 11 (remove -> graph MINUS node .)
    COMMA           reduce using rule 11 (remove -> graph MINUS node .)
    IN              reduce using rule 11 (remove -> graph MINUS node .)
    BINOP           reduce using rule 11 (remove -> graph MINUS node .)
    SEPARATOR       reduce using rule 11 (remove -> graph MINUS node .)
    RSLASHES        reduce using rule 11 (remove -> graph MINUS node .)


state 35

    (14) file -> ID DOT ID .

    $end            reduce using rule 14 (file -> ID DOT ID .)
    COMMA           reduce using rule 14 (file -> ID DOT ID .)
    IN              reduce using rule 14 (file -> ID DOT ID .)
    BINOP           reduce using rule 14 (file -> ID DOT ID .)
    SEPARATOR       reduce using rule 14 (file -> ID DOT ID .)
    RDELIMITER      reduce using rule 14 (file -> ID DOT ID .)
    RSLASHES        reduce using rule 14 (file -> ID DOT ID .)


state 36

    (8) create -> CREATE LSLASHES ID . RSLASHES
    (9) create -> CREATE LSLASHES ID . FROM file RSLASHES

    RSLASHES        shift and go to state 42
    FROM            shift and go to state 43


state 37

    (3) function -> IF function COMMA function . SEPARATOR ELSE function

    SEPARATOR       shift and go to state 44


state 38

    (4) function -> FOR LSLASHES term IN . function RSLASHES term
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 4
    function                       shift and go to state 45
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 39

    (5) function -> WHILE LSLASHES term BINOP . term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 46
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 40

    (6) add -> graph PLUS LDELIMITER file . RDELIMITER

    RDELIMITER      shift and go to state 47


state 41

    (14) file -> ID . DOT ID

    DOT             shift and go to state 24


state 42

    (8) create -> CREATE LSLASHES ID RSLASHES .

    $end            reduce using rule 8 (create -> CREATE LSLASHES ID RSLASHES .)
    COMMA           reduce using rule 8 (create -> CREATE LSLASHES ID RSLASHES .)
    IN              reduce using rule 8 (create -> CREATE LSLASHES ID RSLASHES .)
    BINOP           reduce using rule 8 (create -> CREATE LSLASHES ID RSLASHES .)
    SEPARATOR       reduce using rule 8 (create -> CREATE LSLASHES ID RSLASHES .)
    RSLASHES        reduce using rule 8 (create -> CREATE LSLASHES ID RSLASHES .)


state 43

    (9) create -> CREATE LSLASHES ID FROM . file RSLASHES
    (14) file -> . ID DOT ID

    ID              shift and go to state 41

    file                           shift and go to state 48

state 44

    (3) function -> IF function COMMA function SEPARATOR . ELSE function

    ELSE            shift and go to state 49


state 45

    (4) function -> FOR LSLASHES term IN function . RSLASHES term

    RSLASHES        shift and go to state 50


state 46

    (5) function -> WHILE LSLASHES term BINOP term . RSLASHES term

    RSLASHES        shift and go to state 51


state 47

    (6) add -> graph PLUS LDELIMITER file RDELIMITER .

    $end            reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    COMMA           reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    IN              reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    BINOP           reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    SEPARATOR       reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    RSLASHES        reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)


state 48

    (9) create -> CREATE LSLASHES ID FROM file . RSLASHES

    RSLASHES        shift and go to state 52


state 49

    (3) function -> IF function COMMA function SEPARATOR ELSE . function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 53
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 50

    (4) function -> FOR LSLASHES term IN function RSLASHES . term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 54
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 51

    (5) function -> WHILE LSLASHES term BINOP term RSLASHES . term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS ID
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (8) create -> . CREATE LSLASHES ID RSLASHES
    (9) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 55
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 52

    (9) create -> CREATE LSLASHES ID FROM file RSLASHES .

    $end            reduce using rule 9 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    COMMA           reduce using rule 9 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    IN              reduce using rule 9 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    BINOP           reduce using rule 9 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    SEPARATOR       reduce using rule 9 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    RSLASHES        reduce using rule 9 (create -> CREATE LSLASHES ID FROM file RSLASHES .)


state 53

    (3) function -> IF function COMMA function SEPARATOR ELSE function .

    $end            reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    COMMA           reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    SEPARATOR       reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    RSLASHES        reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)


state 54

    (4) function -> FOR LSLASHES term IN function RSLASHES term .

    $end            reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    COMMA           reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    SEPARATOR       reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    RSLASHES        reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)


state 55

    (5) function -> WHILE LSLASHES term BINOP term RSLASHES term .

    $end            reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    COMMA           reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    SEPARATOR       reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    RSLASHES        reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)

