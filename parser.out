Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHARACTER
    COMMA
    ELSE
    IF
    SEPARATOR

Grammar

Rule 0     S' -> define
Rule 1     define -> BEAR function
Rule 2     function -> term
Rule 3     function -> FOR LSLASHES term IN term RSLASHES function
Rule 4     function -> WHILE LSLASHES term BINOP term RSLASHES term
Rule 5     add -> graph PLUS LDELIMITER file RDELIMITER
Rule 6     add -> graph PLUS ID
Rule 7     create -> CREATE LSLASHES ID RSLASHES
Rule 8     create -> CREATE LSLASHES ID FROM file RSLASHES
Rule 9     create -> CREATE
Rule 10    remove -> graph MINUS node
Rule 11    display -> DISPLAY graph
Rule 12    operations -> graph OPERATIONS
Rule 13    graph -> ID
Rule 14    file -> ID DOT ID
Rule 15    node -> NODE ID
Rule 16    term -> add
Rule 17    term -> remove
Rule 18    term -> display
Rule 19    term -> file
Rule 20    term -> graph
Rule 21    term -> node
Rule 22    term -> create
Rule 23    term -> operations

Terminals, with rules where they appear

BEAR                 : 1
BINOP                : 4
CHARACTER            : 
COMMA                : 
CREATE               : 7 8 9
DISPLAY              : 11
DOT                  : 14
ELSE                 : 
FOR                  : 3
FROM                 : 8
ID                   : 6 7 8 13 14 14 15
IF                   : 
IN                   : 3
LDELIMITER           : 5
LSLASHES             : 3 4 7 8
MINUS                : 10
NODE                 : 15
OPERATIONS           : 12
PLUS                 : 5 6
RDELIMITER           : 5
RSLASHES             : 3 4 7 8
SEPARATOR            : 
WHILE                : 4
error                : 

Nonterminals, with rules where they appear

add                  : 16
create               : 22
define               : 0
display              : 18
file                 : 5 8 19
function             : 1 3
graph                : 5 6 10 11 12 20
node                 : 10 21
operations           : 23
remove               : 17
term                 : 2 3 3 4 4 4

Parsing method: LALR

state 0

    (0) S' -> . define
    (1) define -> . BEAR function

    BEAR            shift and go to state 2

    define                         shift and go to state 1

state 1

    (0) S' -> define .



state 2

    (1) define -> BEAR . function
    (2) function -> . term
    (3) function -> . FOR LSLASHES term IN term RSLASHES function
    (4) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    FOR             shift and go to state 5
    WHILE           shift and go to state 6
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 3
    term                           shift and go to state 4
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 3

    (1) define -> BEAR function .

    $end            reduce using rule 1 (define -> BEAR function .)


state 4

    (2) function -> term .

    $end            reduce using rule 2 (function -> term .)


state 5

    (3) function -> FOR . LSLASHES term IN term RSLASHES function

    LSLASHES        shift and go to state 19


state 6

    (4) function -> WHILE . LSLASHES term BINOP term RSLASHES term

    LSLASHES        shift and go to state 20


state 7

    (16) term -> add .

    $end            reduce using rule 16 (term -> add .)
    IN              reduce using rule 16 (term -> add .)
    BINOP           reduce using rule 16 (term -> add .)
    RSLASHES        reduce using rule 16 (term -> add .)


state 8

    (17) term -> remove .

    $end            reduce using rule 17 (term -> remove .)
    IN              reduce using rule 17 (term -> remove .)
    BINOP           reduce using rule 17 (term -> remove .)
    RSLASHES        reduce using rule 17 (term -> remove .)


state 9

    (18) term -> display .

    $end            reduce using rule 18 (term -> display .)
    IN              reduce using rule 18 (term -> display .)
    BINOP           reduce using rule 18 (term -> display .)
    RSLASHES        reduce using rule 18 (term -> display .)


state 10

    (19) term -> file .

    $end            reduce using rule 19 (term -> file .)
    IN              reduce using rule 19 (term -> file .)
    BINOP           reduce using rule 19 (term -> file .)
    RSLASHES        reduce using rule 19 (term -> file .)


state 11

    (20) term -> graph .
    (5) add -> graph . PLUS LDELIMITER file RDELIMITER
    (6) add -> graph . PLUS ID
    (10) remove -> graph . MINUS node
    (12) operations -> graph . OPERATIONS

    $end            reduce using rule 20 (term -> graph .)
    IN              reduce using rule 20 (term -> graph .)
    BINOP           reduce using rule 20 (term -> graph .)
    RSLASHES        reduce using rule 20 (term -> graph .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    OPERATIONS      shift and go to state 23


state 12

    (21) term -> node .

    $end            reduce using rule 21 (term -> node .)
    IN              reduce using rule 21 (term -> node .)
    BINOP           reduce using rule 21 (term -> node .)
    RSLASHES        reduce using rule 21 (term -> node .)


state 13

    (22) term -> create .

    $end            reduce using rule 22 (term -> create .)
    IN              reduce using rule 22 (term -> create .)
    BINOP           reduce using rule 22 (term -> create .)
    RSLASHES        reduce using rule 22 (term -> create .)


state 14

    (23) term -> operations .

    $end            reduce using rule 23 (term -> operations .)
    IN              reduce using rule 23 (term -> operations .)
    BINOP           reduce using rule 23 (term -> operations .)
    RSLASHES        reduce using rule 23 (term -> operations .)


state 15

    (14) file -> ID . DOT ID
    (13) graph -> ID .

    DOT             shift and go to state 24
    PLUS            reduce using rule 13 (graph -> ID .)
    MINUS           reduce using rule 13 (graph -> ID .)
    OPERATIONS      reduce using rule 13 (graph -> ID .)
    $end            reduce using rule 13 (graph -> ID .)
    IN              reduce using rule 13 (graph -> ID .)
    BINOP           reduce using rule 13 (graph -> ID .)
    RSLASHES        reduce using rule 13 (graph -> ID .)


state 16

    (11) display -> DISPLAY . graph
    (13) graph -> . ID

    ID              shift and go to state 26

    graph                          shift and go to state 25

state 17

    (15) node -> NODE . ID

    ID              shift and go to state 27


state 18

    (7) create -> CREATE . LSLASHES ID RSLASHES
    (8) create -> CREATE . LSLASHES ID FROM file RSLASHES
    (9) create -> CREATE .

    LSLASHES        shift and go to state 28
    $end            reduce using rule 9 (create -> CREATE .)
    IN              reduce using rule 9 (create -> CREATE .)
    BINOP           reduce using rule 9 (create -> CREATE .)
    RSLASHES        reduce using rule 9 (create -> CREATE .)


state 19

    (3) function -> FOR LSLASHES . term IN term RSLASHES function
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 29
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 20

    (4) function -> WHILE LSLASHES . term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 30
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 21

    (5) add -> graph PLUS . LDELIMITER file RDELIMITER
    (6) add -> graph PLUS . ID

    LDELIMITER      shift and go to state 31
    ID              shift and go to state 32


state 22

    (10) remove -> graph MINUS . node
    (15) node -> . NODE ID

    NODE            shift and go to state 17

    node                           shift and go to state 33

state 23

    (12) operations -> graph OPERATIONS .

    $end            reduce using rule 12 (operations -> graph OPERATIONS .)
    IN              reduce using rule 12 (operations -> graph OPERATIONS .)
    BINOP           reduce using rule 12 (operations -> graph OPERATIONS .)
    RSLASHES        reduce using rule 12 (operations -> graph OPERATIONS .)


state 24

    (14) file -> ID DOT . ID

    ID              shift and go to state 34


state 25

    (11) display -> DISPLAY graph .

    $end            reduce using rule 11 (display -> DISPLAY graph .)
    IN              reduce using rule 11 (display -> DISPLAY graph .)
    BINOP           reduce using rule 11 (display -> DISPLAY graph .)
    RSLASHES        reduce using rule 11 (display -> DISPLAY graph .)


state 26

    (13) graph -> ID .

    $end            reduce using rule 13 (graph -> ID .)
    IN              reduce using rule 13 (graph -> ID .)
    BINOP           reduce using rule 13 (graph -> ID .)
    RSLASHES        reduce using rule 13 (graph -> ID .)


state 27

    (15) node -> NODE ID .

    $end            reduce using rule 15 (node -> NODE ID .)
    IN              reduce using rule 15 (node -> NODE ID .)
    BINOP           reduce using rule 15 (node -> NODE ID .)
    RSLASHES        reduce using rule 15 (node -> NODE ID .)


state 28

    (7) create -> CREATE LSLASHES . ID RSLASHES
    (8) create -> CREATE LSLASHES . ID FROM file RSLASHES

    ID              shift and go to state 35


state 29

    (3) function -> FOR LSLASHES term . IN term RSLASHES function

    IN              shift and go to state 36


state 30

    (4) function -> WHILE LSLASHES term . BINOP term RSLASHES term

    BINOP           shift and go to state 37


state 31

    (5) add -> graph PLUS LDELIMITER . file RDELIMITER
    (14) file -> . ID DOT ID

    ID              shift and go to state 39

    file                           shift and go to state 38

state 32

    (6) add -> graph PLUS ID .

    $end            reduce using rule 6 (add -> graph PLUS ID .)
    IN              reduce using rule 6 (add -> graph PLUS ID .)
    BINOP           reduce using rule 6 (add -> graph PLUS ID .)
    RSLASHES        reduce using rule 6 (add -> graph PLUS ID .)


state 33

    (10) remove -> graph MINUS node .

    $end            reduce using rule 10 (remove -> graph MINUS node .)
    IN              reduce using rule 10 (remove -> graph MINUS node .)
    BINOP           reduce using rule 10 (remove -> graph MINUS node .)
    RSLASHES        reduce using rule 10 (remove -> graph MINUS node .)


state 34

    (14) file -> ID DOT ID .

    $end            reduce using rule 14 (file -> ID DOT ID .)
    IN              reduce using rule 14 (file -> ID DOT ID .)
    BINOP           reduce using rule 14 (file -> ID DOT ID .)
    RDELIMITER      reduce using rule 14 (file -> ID DOT ID .)
    RSLASHES        reduce using rule 14 (file -> ID DOT ID .)


state 35

    (7) create -> CREATE LSLASHES ID . RSLASHES
    (8) create -> CREATE LSLASHES ID . FROM file RSLASHES

    RSLASHES        shift and go to state 40
    FROM            shift and go to state 41


state 36

    (3) function -> FOR LSLASHES term IN . term RSLASHES function
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 42
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 37

    (4) function -> WHILE LSLASHES term BINOP . term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 43
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 38

    (5) add -> graph PLUS LDELIMITER file . RDELIMITER

    RDELIMITER      shift and go to state 44


state 39

    (14) file -> ID . DOT ID

    DOT             shift and go to state 24


state 40

    (7) create -> CREATE LSLASHES ID RSLASHES .

    $end            reduce using rule 7 (create -> CREATE LSLASHES ID RSLASHES .)
    IN              reduce using rule 7 (create -> CREATE LSLASHES ID RSLASHES .)
    BINOP           reduce using rule 7 (create -> CREATE LSLASHES ID RSLASHES .)
    RSLASHES        reduce using rule 7 (create -> CREATE LSLASHES ID RSLASHES .)


state 41

    (8) create -> CREATE LSLASHES ID FROM . file RSLASHES
    (14) file -> . ID DOT ID

    ID              shift and go to state 39

    file                           shift and go to state 45

state 42

    (3) function -> FOR LSLASHES term IN term . RSLASHES function

    RSLASHES        shift and go to state 46


state 43

    (4) function -> WHILE LSLASHES term BINOP term . RSLASHES term

    RSLASHES        shift and go to state 47


state 44

    (5) add -> graph PLUS LDELIMITER file RDELIMITER .

    $end            reduce using rule 5 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    IN              reduce using rule 5 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    BINOP           reduce using rule 5 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    RSLASHES        reduce using rule 5 (add -> graph PLUS LDELIMITER file RDELIMITER .)


state 45

    (8) create -> CREATE LSLASHES ID FROM file . RSLASHES

    RSLASHES        shift and go to state 48


state 46

    (3) function -> FOR LSLASHES term IN term RSLASHES . function
    (2) function -> . term
    (3) function -> . FOR LSLASHES term IN term RSLASHES function
    (4) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    FOR             shift and go to state 5
    WHILE           shift and go to state 6
    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 4
    function                       shift and go to state 49
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 47

    (4) function -> WHILE LSLASHES term BINOP term RSLASHES . term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (23) term -> . operations
    (5) add -> . graph PLUS LDELIMITER file RDELIMITER
    (6) add -> . graph PLUS ID
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (14) file -> . ID DOT ID
    (13) graph -> . ID
    (15) node -> . NODE ID
    (7) create -> . CREATE LSLASHES ID RSLASHES
    (8) create -> . CREATE LSLASHES ID FROM file RSLASHES
    (9) create -> . CREATE
    (12) operations -> . graph OPERATIONS

    DISPLAY         shift and go to state 16
    ID              shift and go to state 15
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 50
    add                            shift and go to state 7
    remove                         shift and go to state 8
    display                        shift and go to state 9
    file                           shift and go to state 10
    graph                          shift and go to state 11
    node                           shift and go to state 12
    create                         shift and go to state 13
    operations                     shift and go to state 14

state 48

    (8) create -> CREATE LSLASHES ID FROM file RSLASHES .

    $end            reduce using rule 8 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    IN              reduce using rule 8 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    BINOP           reduce using rule 8 (create -> CREATE LSLASHES ID FROM file RSLASHES .)
    RSLASHES        reduce using rule 8 (create -> CREATE LSLASHES ID FROM file RSLASHES .)


state 49

    (3) function -> FOR LSLASHES term IN term RSLASHES function .

    $end            reduce using rule 3 (function -> FOR LSLASHES term IN term RSLASHES function .)


state 50

    (4) function -> WHILE LSLASHES term BINOP term RSLASHES term .

    $end            reduce using rule 4 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)

