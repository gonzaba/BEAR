Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BINARY
    DIGIT
    DOT
    HELP
    ID
    LPAREN
    RPAREN

Grammar

Rule 0     S' -> test
Rule 1     test -> BEAR function
Rule 2     function -> term
Rule 3     function -> IF function COMMA function SEPARATOR ELSE function
Rule 4     function -> FOR LSLASHES term IN function RSLASHES term
Rule 5     function -> WHILE LSLASHES term BINOP term RSLASHES term
Rule 6     add -> graph PLUS LDELIMITER file RDELIMITER
Rule 7     add -> graph PLUS node
Rule 8     create -> CREATE LSLASHES CHARACTER RSLASHES
Rule 9     create -> CREATE LSLASHES CHARACTER FROM file RSLASHES
Rule 10    create -> CREATE
Rule 11    remove -> graph MINUS node
Rule 12    display -> DISPLAY graph
Rule 13    graph -> CHARACTER
Rule 14    file -> CHARACTER
Rule 15    node -> NODE CHARACTER
Rule 16    term -> add
Rule 17    term -> remove
Rule 18    term -> display
Rule 19    term -> file
Rule 20    term -> graph
Rule 21    term -> node
Rule 22    term -> create

Terminals, with rules where they appear

BEAR                 : 1
BINARY               : 
BINOP                : 5
CHARACTER            : 8 9 13 14 15
COMMA                : 3
CREATE               : 8 9 10
DIGIT                : 
DISPLAY              : 12
DOT                  : 
ELSE                 : 3
FOR                  : 4
FROM                 : 9
HELP                 : 
ID                   : 
IF                   : 3
IN                   : 4
LDELIMITER           : 6
LPAREN               : 
LSLASHES             : 4 5 8 9
MINUS                : 11
NODE                 : 15
PLUS                 : 6 7
RDELIMITER           : 6
RPAREN               : 
RSLASHES             : 4 5 8 9
SEPARATOR            : 3
WHILE                : 5
error                : 

Nonterminals, with rules where they appear

add                  : 16
create               : 22
display              : 18
file                 : 6 9 19
function             : 1 3 3 3 4
graph                : 6 7 11 12 20
node                 : 7 11 21
remove               : 17
term                 : 2 4 4 5 5 5
test                 : 0

Parsing method: LALR

state 0

    (0) S' -> . test
    (1) test -> . BEAR function

    BEAR            shift and go to state 2

    test                           shift and go to state 1

state 1

    (0) S' -> test .



state 2

    (1) test -> BEAR . function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 3
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 3

    (1) test -> BEAR function .

    $end            reduce using rule 1 (test -> BEAR function .)


state 4

    (2) function -> term .

    $end            reduce using rule 2 (function -> term .)
    COMMA           reduce using rule 2 (function -> term .)
    SEPARATOR       reduce using rule 2 (function -> term .)
    RSLASHES        reduce using rule 2 (function -> term .)


state 5

    (3) function -> IF . function COMMA function SEPARATOR ELSE function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 19
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 6

    (4) function -> FOR . LSLASHES term IN function RSLASHES term

    LSLASHES        shift and go to state 20


state 7

    (5) function -> WHILE . LSLASHES term BINOP term RSLASHES term

    LSLASHES        shift and go to state 21


state 8

    (16) term -> add .

    $end            reduce using rule 16 (term -> add .)
    COMMA           reduce using rule 16 (term -> add .)
    IN              reduce using rule 16 (term -> add .)
    BINOP           reduce using rule 16 (term -> add .)
    SEPARATOR       reduce using rule 16 (term -> add .)
    RSLASHES        reduce using rule 16 (term -> add .)


state 9

    (17) term -> remove .

    $end            reduce using rule 17 (term -> remove .)
    COMMA           reduce using rule 17 (term -> remove .)
    IN              reduce using rule 17 (term -> remove .)
    BINOP           reduce using rule 17 (term -> remove .)
    SEPARATOR       reduce using rule 17 (term -> remove .)
    RSLASHES        reduce using rule 17 (term -> remove .)


state 10

    (18) term -> display .

    $end            reduce using rule 18 (term -> display .)
    COMMA           reduce using rule 18 (term -> display .)
    IN              reduce using rule 18 (term -> display .)
    BINOP           reduce using rule 18 (term -> display .)
    SEPARATOR       reduce using rule 18 (term -> display .)
    RSLASHES        reduce using rule 18 (term -> display .)


state 11

    (19) term -> file .

    $end            reduce using rule 19 (term -> file .)
    COMMA           reduce using rule 19 (term -> file .)
    IN              reduce using rule 19 (term -> file .)
    BINOP           reduce using rule 19 (term -> file .)
    SEPARATOR       reduce using rule 19 (term -> file .)
    RSLASHES        reduce using rule 19 (term -> file .)


state 12

    (20) term -> graph .
    (6) add -> graph . PLUS LDELIMITER file RDELIMITER
    (7) add -> graph . PLUS node
    (11) remove -> graph . MINUS node

    $end            reduce using rule 20 (term -> graph .)
    COMMA           reduce using rule 20 (term -> graph .)
    IN              reduce using rule 20 (term -> graph .)
    BINOP           reduce using rule 20 (term -> graph .)
    SEPARATOR       reduce using rule 20 (term -> graph .)
    RSLASHES        reduce using rule 20 (term -> graph .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 13

    (21) term -> node .

    $end            reduce using rule 21 (term -> node .)
    COMMA           reduce using rule 21 (term -> node .)
    IN              reduce using rule 21 (term -> node .)
    BINOP           reduce using rule 21 (term -> node .)
    SEPARATOR       reduce using rule 21 (term -> node .)
    RSLASHES        reduce using rule 21 (term -> node .)


state 14

    (22) term -> create .

    $end            reduce using rule 22 (term -> create .)
    COMMA           reduce using rule 22 (term -> create .)
    IN              reduce using rule 22 (term -> create .)
    BINOP           reduce using rule 22 (term -> create .)
    SEPARATOR       reduce using rule 22 (term -> create .)
    RSLASHES        reduce using rule 22 (term -> create .)


state 15

    (12) display -> DISPLAY . graph
    (13) graph -> . CHARACTER

    CHARACTER       shift and go to state 25

    graph                          shift and go to state 24

state 16

    (14) file -> CHARACTER .
    (13) graph -> CHARACTER .

  ! reduce/reduce conflict for $end resolved using rule 13 (graph -> CHARACTER .)
  ! reduce/reduce conflict for COMMA resolved using rule 13 (graph -> CHARACTER .)
  ! reduce/reduce conflict for IN resolved using rule 13 (graph -> CHARACTER .)
  ! reduce/reduce conflict for BINOP resolved using rule 13 (graph -> CHARACTER .)
  ! reduce/reduce conflict for SEPARATOR resolved using rule 13 (graph -> CHARACTER .)
  ! reduce/reduce conflict for RSLASHES resolved using rule 13 (graph -> CHARACTER .)
    PLUS            reduce using rule 13 (graph -> CHARACTER .)
    MINUS           reduce using rule 13 (graph -> CHARACTER .)
    $end            reduce using rule 13 (graph -> CHARACTER .)
    COMMA           reduce using rule 13 (graph -> CHARACTER .)
    IN              reduce using rule 13 (graph -> CHARACTER .)
    BINOP           reduce using rule 13 (graph -> CHARACTER .)
    SEPARATOR       reduce using rule 13 (graph -> CHARACTER .)
    RSLASHES        reduce using rule 13 (graph -> CHARACTER .)

  ! $end            [ reduce using rule 14 (file -> CHARACTER .) ]
  ! COMMA           [ reduce using rule 14 (file -> CHARACTER .) ]
  ! IN              [ reduce using rule 14 (file -> CHARACTER .) ]
  ! BINOP           [ reduce using rule 14 (file -> CHARACTER .) ]
  ! SEPARATOR       [ reduce using rule 14 (file -> CHARACTER .) ]
  ! RSLASHES        [ reduce using rule 14 (file -> CHARACTER .) ]


state 17

    (15) node -> NODE . CHARACTER

    CHARACTER       shift and go to state 26


state 18

    (8) create -> CREATE . LSLASHES CHARACTER RSLASHES
    (9) create -> CREATE . LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> CREATE .

    LSLASHES        shift and go to state 27
    $end            reduce using rule 10 (create -> CREATE .)
    COMMA           reduce using rule 10 (create -> CREATE .)
    IN              reduce using rule 10 (create -> CREATE .)
    BINOP           reduce using rule 10 (create -> CREATE .)
    SEPARATOR       reduce using rule 10 (create -> CREATE .)
    RSLASHES        reduce using rule 10 (create -> CREATE .)


state 19

    (3) function -> IF function . COMMA function SEPARATOR ELSE function

    COMMA           shift and go to state 28


state 20

    (4) function -> FOR LSLASHES . term IN function RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 29
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 21

    (5) function -> WHILE LSLASHES . term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 30
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 22

    (6) add -> graph PLUS . LDELIMITER file RDELIMITER
    (7) add -> graph PLUS . node
    (15) node -> . NODE CHARACTER

    LDELIMITER      shift and go to state 31
    NODE            shift and go to state 17

    node                           shift and go to state 32

state 23

    (11) remove -> graph MINUS . node
    (15) node -> . NODE CHARACTER

    NODE            shift and go to state 17

    node                           shift and go to state 33

state 24

    (12) display -> DISPLAY graph .

    $end            reduce using rule 12 (display -> DISPLAY graph .)
    COMMA           reduce using rule 12 (display -> DISPLAY graph .)
    IN              reduce using rule 12 (display -> DISPLAY graph .)
    BINOP           reduce using rule 12 (display -> DISPLAY graph .)
    SEPARATOR       reduce using rule 12 (display -> DISPLAY graph .)
    RSLASHES        reduce using rule 12 (display -> DISPLAY graph .)


state 25

    (13) graph -> CHARACTER .

    $end            reduce using rule 13 (graph -> CHARACTER .)
    COMMA           reduce using rule 13 (graph -> CHARACTER .)
    IN              reduce using rule 13 (graph -> CHARACTER .)
    BINOP           reduce using rule 13 (graph -> CHARACTER .)
    SEPARATOR       reduce using rule 13 (graph -> CHARACTER .)
    RSLASHES        reduce using rule 13 (graph -> CHARACTER .)


state 26

    (15) node -> NODE CHARACTER .

    $end            reduce using rule 15 (node -> NODE CHARACTER .)
    COMMA           reduce using rule 15 (node -> NODE CHARACTER .)
    IN              reduce using rule 15 (node -> NODE CHARACTER .)
    BINOP           reduce using rule 15 (node -> NODE CHARACTER .)
    SEPARATOR       reduce using rule 15 (node -> NODE CHARACTER .)
    RSLASHES        reduce using rule 15 (node -> NODE CHARACTER .)


state 27

    (8) create -> CREATE LSLASHES . CHARACTER RSLASHES
    (9) create -> CREATE LSLASHES . CHARACTER FROM file RSLASHES

    CHARACTER       shift and go to state 34


state 28

    (3) function -> IF function COMMA . function SEPARATOR ELSE function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 35
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 29

    (4) function -> FOR LSLASHES term . IN function RSLASHES term

    IN              shift and go to state 36


state 30

    (5) function -> WHILE LSLASHES term . BINOP term RSLASHES term

    BINOP           shift and go to state 37


state 31

    (6) add -> graph PLUS LDELIMITER . file RDELIMITER
    (14) file -> . CHARACTER

    CHARACTER       shift and go to state 39

    file                           shift and go to state 38

state 32

    (7) add -> graph PLUS node .

    $end            reduce using rule 7 (add -> graph PLUS node .)
    COMMA           reduce using rule 7 (add -> graph PLUS node .)
    IN              reduce using rule 7 (add -> graph PLUS node .)
    BINOP           reduce using rule 7 (add -> graph PLUS node .)
    SEPARATOR       reduce using rule 7 (add -> graph PLUS node .)
    RSLASHES        reduce using rule 7 (add -> graph PLUS node .)


state 33

    (11) remove -> graph MINUS node .

    $end            reduce using rule 11 (remove -> graph MINUS node .)
    COMMA           reduce using rule 11 (remove -> graph MINUS node .)
    IN              reduce using rule 11 (remove -> graph MINUS node .)
    BINOP           reduce using rule 11 (remove -> graph MINUS node .)
    SEPARATOR       reduce using rule 11 (remove -> graph MINUS node .)
    RSLASHES        reduce using rule 11 (remove -> graph MINUS node .)


state 34

    (8) create -> CREATE LSLASHES CHARACTER . RSLASHES
    (9) create -> CREATE LSLASHES CHARACTER . FROM file RSLASHES

    RSLASHES        shift and go to state 40
    FROM            shift and go to state 41


state 35

    (3) function -> IF function COMMA function . SEPARATOR ELSE function

    SEPARATOR       shift and go to state 42


state 36

    (4) function -> FOR LSLASHES term IN . function RSLASHES term
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 4
    function                       shift and go to state 43
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 37

    (5) function -> WHILE LSLASHES term BINOP . term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 44
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 38

    (6) add -> graph PLUS LDELIMITER file . RDELIMITER

    RDELIMITER      shift and go to state 45


state 39

    (14) file -> CHARACTER .

    RDELIMITER      reduce using rule 14 (file -> CHARACTER .)
    RSLASHES        reduce using rule 14 (file -> CHARACTER .)


state 40

    (8) create -> CREATE LSLASHES CHARACTER RSLASHES .

    $end            reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    COMMA           reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    IN              reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    BINOP           reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    SEPARATOR       reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    RSLASHES        reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)


state 41

    (9) create -> CREATE LSLASHES CHARACTER FROM . file RSLASHES
    (14) file -> . CHARACTER

    CHARACTER       shift and go to state 39

    file                           shift and go to state 46

state 42

    (3) function -> IF function COMMA function SEPARATOR . ELSE function

    ELSE            shift and go to state 47


state 43

    (4) function -> FOR LSLASHES term IN function . RSLASHES term

    RSLASHES        shift and go to state 48


state 44

    (5) function -> WHILE LSLASHES term BINOP term . RSLASHES term

    RSLASHES        shift and go to state 49


state 45

    (6) add -> graph PLUS LDELIMITER file RDELIMITER .

    $end            reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    COMMA           reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    IN              reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    BINOP           reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    SEPARATOR       reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)
    RSLASHES        reduce using rule 6 (add -> graph PLUS LDELIMITER file RDELIMITER .)


state 46

    (9) create -> CREATE LSLASHES CHARACTER FROM file . RSLASHES

    RSLASHES        shift and go to state 50


state 47

    (3) function -> IF function COMMA function SEPARATOR ELSE . function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    function                       shift and go to state 51
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 48

    (4) function -> FOR LSLASHES term IN function RSLASHES . term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 52
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 49

    (5) function -> WHILE LSLASHES term BINOP term RSLASHES . term
    (16) term -> . add
    (17) term -> . remove
    (18) term -> . display
    (19) term -> . file
    (20) term -> . graph
    (21) term -> . node
    (22) term -> . create
    (6) add -> . graph PLUS LDELIMITER file RDELIMITER
    (7) add -> . graph PLUS node
    (11) remove -> . graph MINUS node
    (12) display -> . DISPLAY graph
    (14) file -> . CHARACTER
    (13) graph -> . CHARACTER
    (15) node -> . NODE CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES
    (10) create -> . CREATE

    DISPLAY         shift and go to state 15
    CHARACTER       shift and go to state 16
    NODE            shift and go to state 17
    CREATE          shift and go to state 18

    term                           shift and go to state 53
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    node                           shift and go to state 13
    create                         shift and go to state 14

state 50

    (9) create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .

    $end            reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    COMMA           reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    IN              reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    BINOP           reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    SEPARATOR       reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    RSLASHES        reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)


state 51

    (3) function -> IF function COMMA function SEPARATOR ELSE function .

    $end            reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    COMMA           reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    SEPARATOR       reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    RSLASHES        reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)


state 52

    (4) function -> FOR LSLASHES term IN function RSLASHES term .

    $end            reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    COMMA           reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    SEPARATOR       reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    RSLASHES        reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)


state 53

    (5) function -> WHILE LSLASHES term BINOP term RSLASHES term .

    $end            reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    COMMA           reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    SEPARATOR       reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    RSLASHES        reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 16 resolved using rule (graph -> CHARACTER)
WARNING: rejected rule (file -> CHARACTER) in state 16
