Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BINARY
    DIGIT
    ID
    LPAREN
    RPAREN

Grammar

Rule 0     S' -> test
Rule 1     test -> BEAR function
Rule 2     function -> term
Rule 3     function -> IF function COMMA function SEPARATOR ELSE function
Rule 4     function -> FOR LSLASHES term IN function RSLASHES term
Rule 5     function -> WHILE LSLASHES term BINOP term RSLASHES term
Rule 6     add -> graph PLUS LDELIMITER file COMMA node RDELIMITER
Rule 7     add -> graph PLUS node
Rule 8     create -> CREATE LSLASHES CHARACTER RSLASHES
Rule 9     create -> CREATE LSLASHES CHARACTER FROM file RSLASHES
Rule 10    remove -> graph MINUS node
Rule 11    display -> DISPLAY graph
Rule 12    graph -> CHARACTER
Rule 13    file -> CHARACTER DOT CHARACTER
Rule 14    node -> CHARACTER
Rule 15    term -> add
Rule 16    term -> remove
Rule 17    term -> display
Rule 18    term -> file
Rule 19    term -> graph
Rule 20    term -> create

Terminals, with rules where they appear

BEAR                 : 1
BINARY               : 
BINOP                : 5
CHARACTER            : 8 9 12 13 13 14
COMMA                : 3 6
CREATE               : 8 9
DIGIT                : 
DISPLAY              : 11
DOT                  : 13
ELSE                 : 3
FOR                  : 4
FROM                 : 9
ID                   : 
IF                   : 3
IN                   : 4
LDELIMITER           : 6
LPAREN               : 
LSLASHES             : 4 5 8 9
MINUS                : 10
PLUS                 : 6 7
RDELIMITER           : 6
RPAREN               : 
RSLASHES             : 4 5 8 9
SEPARATOR            : 3
WHILE                : 5
error                : 

Nonterminals, with rules where they appear

add                  : 15
create               : 20
display              : 17
file                 : 6 9 18
function             : 1 3 3 3 4
graph                : 6 7 10 11 19
node                 : 6 7 10
remove               : 16
term                 : 2 4 4 5 5 5
test                 : 0

Parsing method: LALR

state 0

    (0) S' -> . test
    (1) test -> . BEAR function

    BEAR            shift and go to state 2

    test                           shift and go to state 1

state 1

    (0) S' -> test .



state 2

    (1) test -> BEAR . function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    function                       shift and go to state 3
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 3

    (1) test -> BEAR function .

    $end            reduce using rule 1 (test -> BEAR function .)


state 4

    (2) function -> term .

    $end            reduce using rule 2 (function -> term .)
    COMMA           reduce using rule 2 (function -> term .)
    SEPARATOR       reduce using rule 2 (function -> term .)
    RSLASHES        reduce using rule 2 (function -> term .)


state 5

    (3) function -> IF . function COMMA function SEPARATOR ELSE function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    function                       shift and go to state 17
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 6

    (4) function -> FOR . LSLASHES term IN function RSLASHES term

    LSLASHES        shift and go to state 18


state 7

    (5) function -> WHILE . LSLASHES term BINOP term RSLASHES term

    LSLASHES        shift and go to state 19


state 8

    (15) term -> add .

    $end            reduce using rule 15 (term -> add .)
    COMMA           reduce using rule 15 (term -> add .)
    IN              reduce using rule 15 (term -> add .)
    BINOP           reduce using rule 15 (term -> add .)
    SEPARATOR       reduce using rule 15 (term -> add .)
    RSLASHES        reduce using rule 15 (term -> add .)


state 9

    (16) term -> remove .

    $end            reduce using rule 16 (term -> remove .)
    COMMA           reduce using rule 16 (term -> remove .)
    IN              reduce using rule 16 (term -> remove .)
    BINOP           reduce using rule 16 (term -> remove .)
    SEPARATOR       reduce using rule 16 (term -> remove .)
    RSLASHES        reduce using rule 16 (term -> remove .)


state 10

    (17) term -> display .

    $end            reduce using rule 17 (term -> display .)
    COMMA           reduce using rule 17 (term -> display .)
    IN              reduce using rule 17 (term -> display .)
    BINOP           reduce using rule 17 (term -> display .)
    SEPARATOR       reduce using rule 17 (term -> display .)
    RSLASHES        reduce using rule 17 (term -> display .)


state 11

    (18) term -> file .

    $end            reduce using rule 18 (term -> file .)
    COMMA           reduce using rule 18 (term -> file .)
    IN              reduce using rule 18 (term -> file .)
    BINOP           reduce using rule 18 (term -> file .)
    SEPARATOR       reduce using rule 18 (term -> file .)
    RSLASHES        reduce using rule 18 (term -> file .)


state 12

    (19) term -> graph .
    (6) add -> graph . PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> graph . PLUS node
    (10) remove -> graph . MINUS node

    $end            reduce using rule 19 (term -> graph .)
    COMMA           reduce using rule 19 (term -> graph .)
    IN              reduce using rule 19 (term -> graph .)
    BINOP           reduce using rule 19 (term -> graph .)
    SEPARATOR       reduce using rule 19 (term -> graph .)
    RSLASHES        reduce using rule 19 (term -> graph .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 13

    (20) term -> create .

    $end            reduce using rule 20 (term -> create .)
    COMMA           reduce using rule 20 (term -> create .)
    IN              reduce using rule 20 (term -> create .)
    BINOP           reduce using rule 20 (term -> create .)
    SEPARATOR       reduce using rule 20 (term -> create .)
    RSLASHES        reduce using rule 20 (term -> create .)


state 14

    (11) display -> DISPLAY . graph
    (12) graph -> . CHARACTER

    CHARACTER       shift and go to state 23

    graph                          shift and go to state 22

state 15

    (13) file -> CHARACTER . DOT CHARACTER
    (12) graph -> CHARACTER .

    DOT             shift and go to state 24
    PLUS            reduce using rule 12 (graph -> CHARACTER .)
    MINUS           reduce using rule 12 (graph -> CHARACTER .)
    $end            reduce using rule 12 (graph -> CHARACTER .)
    COMMA           reduce using rule 12 (graph -> CHARACTER .)
    IN              reduce using rule 12 (graph -> CHARACTER .)
    BINOP           reduce using rule 12 (graph -> CHARACTER .)
    SEPARATOR       reduce using rule 12 (graph -> CHARACTER .)
    RSLASHES        reduce using rule 12 (graph -> CHARACTER .)


state 16

    (8) create -> CREATE . LSLASHES CHARACTER RSLASHES
    (9) create -> CREATE . LSLASHES CHARACTER FROM file RSLASHES

    LSLASHES        shift and go to state 25


state 17

    (3) function -> IF function . COMMA function SEPARATOR ELSE function

    COMMA           shift and go to state 26


state 18

    (4) function -> FOR LSLASHES . term IN function RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    term                           shift and go to state 27
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 19

    (5) function -> WHILE LSLASHES . term BINOP term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    term                           shift and go to state 28
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 20

    (6) add -> graph PLUS . LDELIMITER file COMMA node RDELIMITER
    (7) add -> graph PLUS . node
    (14) node -> . CHARACTER

    LDELIMITER      shift and go to state 29
    CHARACTER       shift and go to state 31

    node                           shift and go to state 30

state 21

    (10) remove -> graph MINUS . node
    (14) node -> . CHARACTER

    CHARACTER       shift and go to state 31

    node                           shift and go to state 32

state 22

    (11) display -> DISPLAY graph .

    $end            reduce using rule 11 (display -> DISPLAY graph .)
    COMMA           reduce using rule 11 (display -> DISPLAY graph .)
    IN              reduce using rule 11 (display -> DISPLAY graph .)
    BINOP           reduce using rule 11 (display -> DISPLAY graph .)
    SEPARATOR       reduce using rule 11 (display -> DISPLAY graph .)
    RSLASHES        reduce using rule 11 (display -> DISPLAY graph .)


state 23

    (12) graph -> CHARACTER .

    $end            reduce using rule 12 (graph -> CHARACTER .)
    COMMA           reduce using rule 12 (graph -> CHARACTER .)
    IN              reduce using rule 12 (graph -> CHARACTER .)
    BINOP           reduce using rule 12 (graph -> CHARACTER .)
    SEPARATOR       reduce using rule 12 (graph -> CHARACTER .)
    RSLASHES        reduce using rule 12 (graph -> CHARACTER .)


state 24

    (13) file -> CHARACTER DOT . CHARACTER

    CHARACTER       shift and go to state 33


state 25

    (8) create -> CREATE LSLASHES . CHARACTER RSLASHES
    (9) create -> CREATE LSLASHES . CHARACTER FROM file RSLASHES

    CHARACTER       shift and go to state 34


state 26

    (3) function -> IF function COMMA . function SEPARATOR ELSE function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    function                       shift and go to state 35
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 27

    (4) function -> FOR LSLASHES term . IN function RSLASHES term

    IN              shift and go to state 36


state 28

    (5) function -> WHILE LSLASHES term . BINOP term RSLASHES term

    BINOP           shift and go to state 37


state 29

    (6) add -> graph PLUS LDELIMITER . file COMMA node RDELIMITER
    (13) file -> . CHARACTER DOT CHARACTER

    CHARACTER       shift and go to state 39

    file                           shift and go to state 38

state 30

    (7) add -> graph PLUS node .

    $end            reduce using rule 7 (add -> graph PLUS node .)
    COMMA           reduce using rule 7 (add -> graph PLUS node .)
    IN              reduce using rule 7 (add -> graph PLUS node .)
    BINOP           reduce using rule 7 (add -> graph PLUS node .)
    SEPARATOR       reduce using rule 7 (add -> graph PLUS node .)
    RSLASHES        reduce using rule 7 (add -> graph PLUS node .)


state 31

    (14) node -> CHARACTER .

    $end            reduce using rule 14 (node -> CHARACTER .)
    COMMA           reduce using rule 14 (node -> CHARACTER .)
    IN              reduce using rule 14 (node -> CHARACTER .)
    BINOP           reduce using rule 14 (node -> CHARACTER .)
    SEPARATOR       reduce using rule 14 (node -> CHARACTER .)
    RSLASHES        reduce using rule 14 (node -> CHARACTER .)
    RDELIMITER      reduce using rule 14 (node -> CHARACTER .)


state 32

    (10) remove -> graph MINUS node .

    $end            reduce using rule 10 (remove -> graph MINUS node .)
    COMMA           reduce using rule 10 (remove -> graph MINUS node .)
    IN              reduce using rule 10 (remove -> graph MINUS node .)
    BINOP           reduce using rule 10 (remove -> graph MINUS node .)
    SEPARATOR       reduce using rule 10 (remove -> graph MINUS node .)
    RSLASHES        reduce using rule 10 (remove -> graph MINUS node .)


state 33

    (13) file -> CHARACTER DOT CHARACTER .

    $end            reduce using rule 13 (file -> CHARACTER DOT CHARACTER .)
    COMMA           reduce using rule 13 (file -> CHARACTER DOT CHARACTER .)
    IN              reduce using rule 13 (file -> CHARACTER DOT CHARACTER .)
    BINOP           reduce using rule 13 (file -> CHARACTER DOT CHARACTER .)
    SEPARATOR       reduce using rule 13 (file -> CHARACTER DOT CHARACTER .)
    RSLASHES        reduce using rule 13 (file -> CHARACTER DOT CHARACTER .)


state 34

    (8) create -> CREATE LSLASHES CHARACTER . RSLASHES
    (9) create -> CREATE LSLASHES CHARACTER . FROM file RSLASHES

    RSLASHES        shift and go to state 40
    FROM            shift and go to state 41


state 35

    (3) function -> IF function COMMA function . SEPARATOR ELSE function

    SEPARATOR       shift and go to state 42


state 36

    (4) function -> FOR LSLASHES term IN . function RSLASHES term
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    term                           shift and go to state 4
    function                       shift and go to state 43
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 37

    (5) function -> WHILE LSLASHES term BINOP . term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    term                           shift and go to state 44
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 38

    (6) add -> graph PLUS LDELIMITER file . COMMA node RDELIMITER

    COMMA           shift and go to state 45


state 39

    (13) file -> CHARACTER . DOT CHARACTER

    DOT             shift and go to state 24


state 40

    (8) create -> CREATE LSLASHES CHARACTER RSLASHES .

    $end            reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    COMMA           reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    IN              reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    BINOP           reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    SEPARATOR       reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)
    RSLASHES        reduce using rule 8 (create -> CREATE LSLASHES CHARACTER RSLASHES .)


state 41

    (9) create -> CREATE LSLASHES CHARACTER FROM . file RSLASHES
    (13) file -> . CHARACTER DOT CHARACTER

    CHARACTER       shift and go to state 39

    file                           shift and go to state 46

state 42

    (3) function -> IF function COMMA function SEPARATOR . ELSE function

    ELSE            shift and go to state 47


state 43

    (4) function -> FOR LSLASHES term IN function . RSLASHES term

    RSLASHES        shift and go to state 48


state 44

    (5) function -> WHILE LSLASHES term BINOP term . RSLASHES term

    RSLASHES        shift and go to state 49


state 45

    (6) add -> graph PLUS LDELIMITER file COMMA . node RDELIMITER
    (14) node -> . CHARACTER

    CHARACTER       shift and go to state 31

    node                           shift and go to state 50

state 46

    (9) create -> CREATE LSLASHES CHARACTER FROM file . RSLASHES

    RSLASHES        shift and go to state 51


state 47

    (3) function -> IF function COMMA function SEPARATOR ELSE . function
    (2) function -> . term
    (3) function -> . IF function COMMA function SEPARATOR ELSE function
    (4) function -> . FOR LSLASHES term IN function RSLASHES term
    (5) function -> . WHILE LSLASHES term BINOP term RSLASHES term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    function                       shift and go to state 52
    term                           shift and go to state 4
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 48

    (4) function -> FOR LSLASHES term IN function RSLASHES . term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    term                           shift and go to state 53
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 49

    (5) function -> WHILE LSLASHES term BINOP term RSLASHES . term
    (15) term -> . add
    (16) term -> . remove
    (17) term -> . display
    (18) term -> . file
    (19) term -> . graph
    (20) term -> . create
    (6) add -> . graph PLUS LDELIMITER file COMMA node RDELIMITER
    (7) add -> . graph PLUS node
    (10) remove -> . graph MINUS node
    (11) display -> . DISPLAY graph
    (13) file -> . CHARACTER DOT CHARACTER
    (12) graph -> . CHARACTER
    (8) create -> . CREATE LSLASHES CHARACTER RSLASHES
    (9) create -> . CREATE LSLASHES CHARACTER FROM file RSLASHES

    DISPLAY         shift and go to state 14
    CHARACTER       shift and go to state 15
    CREATE          shift and go to state 16

    term                           shift and go to state 54
    add                            shift and go to state 8
    remove                         shift and go to state 9
    display                        shift and go to state 10
    file                           shift and go to state 11
    graph                          shift and go to state 12
    create                         shift and go to state 13

state 50

    (6) add -> graph PLUS LDELIMITER file COMMA node . RDELIMITER

    RDELIMITER      shift and go to state 55


state 51

    (9) create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .

    $end            reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    COMMA           reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    IN              reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    BINOP           reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    SEPARATOR       reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)
    RSLASHES        reduce using rule 9 (create -> CREATE LSLASHES CHARACTER FROM file RSLASHES .)


state 52

    (3) function -> IF function COMMA function SEPARATOR ELSE function .

    $end            reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    COMMA           reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    SEPARATOR       reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)
    RSLASHES        reduce using rule 3 (function -> IF function COMMA function SEPARATOR ELSE function .)


state 53

    (4) function -> FOR LSLASHES term IN function RSLASHES term .

    $end            reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    COMMA           reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    SEPARATOR       reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)
    RSLASHES        reduce using rule 4 (function -> FOR LSLASHES term IN function RSLASHES term .)


state 54

    (5) function -> WHILE LSLASHES term BINOP term RSLASHES term .

    $end            reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    COMMA           reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    SEPARATOR       reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)
    RSLASHES        reduce using rule 5 (function -> WHILE LSLASHES term BINOP term RSLASHES term .)


state 55

    (6) add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .

    $end            reduce using rule 6 (add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .)
    COMMA           reduce using rule 6 (add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .)
    IN              reduce using rule 6 (add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .)
    BINOP           reduce using rule 6 (add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .)
    SEPARATOR       reduce using rule 6 (add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .)
    RSLASHES        reduce using rule 6 (add -> graph PLUS LDELIMITER file COMMA node RDELIMITER .)

